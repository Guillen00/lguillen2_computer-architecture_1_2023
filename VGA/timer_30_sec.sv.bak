module timer_30_sec #(parameter total_secs = 10)(
  input reg clk,
  input reg reset,
  output reg finish,
  output reg counting,
  output reg finish_30sec
  );
  
reg [8:0] accum = 0;
reg status = 1'b1;

timer sec_one(.clk(clk),.finish(finish),.counting(counting));

always @(posedge clk or negedge reset) begin
	 if (~reset) begin
			accum = 0;
			finish_30sec <= 1'b0;	
		end
	 else if (accum == total_secs) begin
			if (finish_30sec == 1'b1) begin
				finish_30sec <= 1'b0;
				accum = 0;
				end
		   else begin 
				accum = 0;
				finish_30sec <= 1'b1;
				end
		end
	 
	 else if(status == 1'b1 && finish == 1'b1) begin
			status = 1'b0;
			accum = accum +1;
		end
	 
	 else if(status == 1'b0 && finish == 1'b0) begin
			status = 1'b1;
			accum = accum +1;
		end
end

endmodule